# LandPPT Alpine Docker Image
# Using Alpine Linux for smaller size and better network compatibility

FROM python:3.11-alpine

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app/src

# Install minimal system dependencies using Alpine package manager
RUN apk add --no-cache \
    curl \
    ca-certificates \
    gcc \
    musl-dev \
    libffi-dev \
    && rm -rf /var/cache/apk/*

# Create non-root user
RUN addgroup -g 1000 landppt && \
    adduser -D -s /bin/sh -u 1000 -G landppt landppt

# Set work directory
WORKDIR /app

# Copy requirements file
COPY requirements-docker.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements-docker.txt

# Copy application code
COPY src/ ./src/
COPY run.py setup_database.py ./
COPY template_examples/ ./template_examples/
COPY docker-healthcheck.sh docker-entrypoint.sh ./

# Make scripts executable
RUN chmod +x docker-healthcheck.sh docker-entrypoint.sh

# Create necessary directories
RUN mkdir -p temp/ai_responses_cache \
    temp/style_genes_cache \
    temp/summeryanyfile_cache \
    temp/templates_cache \
    research_reports \
    lib/Linux \
    lib/MacOS \
    lib/Windows \
    uploads \
    data \
    && chown -R landppt:landppt /app

# Switch to non-root user
USER landppt

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Set entrypoint and default command
ENTRYPOINT ["./docker-entrypoint.sh"]
CMD ["python", "run.py"]
